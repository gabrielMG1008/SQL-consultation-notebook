ALIAS - NICKNAME FOR TABLES

-- Example of querying two tables without ALIAS
SELECT T_SIP_FUNCIONARIO.NM_FUNCIONARIO , 
       T_SIP_FUNCIONARIO.CD_DEPTO , 
       T_SIP_DEPARTMENT.NM_DEPT 
  FROM T_SIP_DEPARTAMENTO INNER JOIN T_SIP_FUNCIONARIO 
    ON T_SIP_DEPARTAMENTO.CD_DEPTO = T_SIP_FUNCIONARIO.CD_DEPTO;


-- Example of querying two tables with ALIAS
SELECT F.NM_FUNCIONARIO ,
       F.CD_DEPTO ,
       D.NM_DEPTO
  FROM T_SIP_DEPARTAMENTO D INNER JOIN T_SIP_FUNCIONARIO F
    ON (D.CD_DEPTO = F.CD_DEPTO);


-- USING THE ANSI SQL/99 STANDARD
-- CROSS JOIN
SELECT *
  FROM T_SIP_DEPARTMENT,
       CROSS JOIN T_SIP_EMPLOYEE;


-- EXAMPLE - INNER JOIN – SQL/99 Standard
SELECT F.NR_MATRICULA, F.CD_DEPTO,
       D.NM_DEPTO, F.NM_EMPLOYEE
  FROM T_SIP_DEPARTAMENTO D INNER JOIN T_SIP_EMPLOYEE F
       ON ( D.CD_DEPTO = F.CD_DEPTO )
ORDER BY D.NM_DEPTO;


-- EXAMPLE - INNER JOIN with the USING clause
SELECT F.NR_MATRICULA,
       CD_DEPTO,
       D.NM_DEPTO, F.NM_FUNCIONARIO
  FROM T_SIP_DEPARTAMENTO D INNER JOIN T_SIP_FUNCIONARIO F
       USING ( CD_DEPTO )
ORDER BY NM_DEPTO;


--- EXAMPLE - INNER JOIN – SQL/99 Standard
SELECT F.NR_MATRICULA, F.NM_FUNCIONARIO,
       P.NM_PROJETO,
       I.DT_ENTRADA, I.DT_SAIDA
  FROM T_SIP_PROJETO P INNER JOIN T_SIP_IMPLANTACAO I
       ON ( P.CD_PROJETO = I.CD_PROJETO )
       INNER JOIN T_SIP_FUNCIONARIO F
       ON ( F.NR_MATRICULA = I.NR_MATRICULA )
ORDER BY F.NM_FUNCIONARIO ;


-- EXAMPLE WITH INNER JOIN - SQL/99 STANDARD -
-- USING CLAUSE
SELECT NR_MATRICULA, F.NM_FUNCIONARIO,
       P.NM_PROJETO,
       I.DT_ENTRADA, I.DT_SAIDA
  FROM T_SIP_PROJETO P INNER JOIN T_SIP_IMPLANTACAO I
       USING ( CD_PROJETO )
       INNER JOIN T_SIP_FUNCIONARIO F
       USING ( NR_MATRICULA )
ORDER BY F.NM_FUNCIONARIO ;


-- EXAMPLE LEFT OUTER JOIN - SQL/99 STANDARD
SELECT P.CD_PROJETO, P.NM_PROJETO, P.DT_INICIO,
             I.NR_MATRICULA, I.DT_ENTRADA
 FROM  T_SIP_PROJETO P LEFT OUTER JOIN T_SIP_IMPLANTACAO I
       ON ( P.CD_PROJETO = I.CD_PROJETO );


-- EXAMPLE WITH LEFT OUTER JOIN - SQL/99 STANDARD - WITH VALIDATION OF NULL RESULTS
SELECT P.CD_PROJETO, P.NM_PROJETO, P.DT_INICIO,
          I.NR_MATRICULA, I.DT_ENTRADA
 FROM  T_SIP_PROJETO P LEFT OUTER JOIN T_SIP_IMPLANTACAO I
        ON ( P.CD_PROJETO = I.CD_PROJETO )
WHERE I.CD_PROJETO IS NULL ;


-- LEFT OUTER JOIN EXAMPLE - SQL/99 STANDARD
-- USING CLAUSE
SELECT CD_PROJETO, P.NM_PROJETO, P.DT_INICIO,
       I.NR_MATRICULA, I.DT_ENTRADA
  FROM T_SIP_PROJETO P LEFT OUTER JOIN T_SIP_IMPLANTACAO I
       USING ( CD_PROJETO );


-- RIGHT OUTER JOIN EXAMPLE - SQL/99 STANDARD
SELECT F.NR_REGISTRATION, 
       I.CD_PROJETO, I.DT_INPUT, I.DT_OUT
  FROM T_SIP_IMPLANTACAO I RIGHT OUTER JOIN T_SIP_FUNCIONARIO F 
       ON (F.NR_REGISTRATION = I.NR_REGISTRATION);


-- FULL OUTER JOIN EXAMPLE - SQL/99 STANDARD
SELECT EC.CD_EMPRESA_CONV,
       EC.DS_RAZAO_SOCIAL,
       M.NR_MATRICULA_ALUNO,
       M.CD_ALUNO
  FROM T_SCA_EMPRESA_CONV EC FULL OUTER JOIN T_SCA_MATRICULA M
       ON (EC.CD_EMPRESA_CONV = M.CD_EMPRESA_CONV);


-- SELF JOIN EXAMPLE - SQL/99 STANDARD
SELECT FUNC.CD_EMPLOYEE, FUNC.NM_EMPLOYEE,
       FUNC.CD_MANAGER, GEN.NM_EMPLOYEE "EMPLOYEE MANAGER"
  FROM T_EXE_FUNCIONARIO FUNC INNER JOIN T_EXE_FUNCIONARIO MANAGER
       ON (GEN.CD_EMPLOYEE = FUNC.CD_MANAGER);
